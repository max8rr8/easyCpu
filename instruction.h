#define REG_ZX 0 
#define REG_PC 1 
#define REG_R0 2 
#define REG_R1 3 
#define REG_R2 4 
#define REG_R3 5 
#define REG_R4 6 
#define REG_R5 7 

#define ARG_REG1(x) (x << 6)
#define ARG_REG2(x) (x << 3)
#define ARG_REG3(x) (x << 0)

#define I_ALU_AND  0b0100000000000000 // A&B
#define I_ALU_ADD  0b0101000000000000 // A+B
#define I_LOAD     0b0010000000000000 
#define I_STORE    0b0011000000000000 
#define I_BRANCH   0b0001000000000000
#define I_NOP      0b0000000000000000
                      
#define I_ALU_NEGATE_X 0b0000100000000000
#define I_ALU_NEGATE_Y 0b0000010000000000
#define I_ALU_NEGATE_O 0b0000001000000000

#define I_ALU_SUB_AB I_ALU_ADD | I_ALU_NEGATE_X | I_ALU_NEGATE_O // A-B
#define I_ALU_SUB_BA I_ALU_ADD | I_ALU_NEGATE_Y | I_ALU_NEGATE_O // B-A

#define I_ALU_OR I_ALU_AND | I_ALU_NEGATE_X | I_ALU_NEGATE_Y | I_ALU_NEGATE_O // A|B

#define I_CTR_HALT 0b1111001000000000 // HALT

#define I_BRANCH_EQ 0b0000100000000000
#define I_BRANCH_GT 0b0000010000000000
#define I_BRANCH_LT 0b0000001000000000

#define I_BRANCH_ANY (I_BRANCH_EQ | I_BRANCH_GT | I_BRANCH_LT)
